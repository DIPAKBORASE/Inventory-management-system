const express = require('express');
const {
    getProduct,
    updateProduct,
    deleteProduct,
    addProduct,
    getProducts,
    getSearchProducts,
    getSearchInwardProducts,
    getAllProducts,
    trackAsset,
    getALLProductGroup,
    getALLProductALTCode,
    getPrductsExport,
    getTrackAssetExport,
    getSearchOpexProducts,
    getSearchCapexProducts,
} = require('../controllers/product');
const router = express.Router();
const { protect, authorize } = require('../middleware/auth');

const product_valid = require('../validations/product_validator');

router
    .post(
        '/getProduct',
        product_valid.idValid(),
        protect,
        authorize(
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getProduct
    )
    .post(
        '/getProducts',
        protect,
        authorize(
            process.env.REQUESTER,
            process.env.SUPPORT,
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getProducts
    )
    .post(
        '/getProductsExport',
        protect,
        authorize(
            process.env.REQUESTER,
            process.env.SUPPORT,
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getPrductsExport
    )
    .post(
        '/updateProduct',
        product_valid.updateValid(),
        protect,
        authorize(
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        updateProduct
    )
    .post(
        '/deleteProduct',
        product_valid.idValid(),
        protect,
        authorize(
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        deleteProduct
    )
    .post(
        '/addProduct',
        product_valid.saveValid(),
        protect,
        authorize(
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        addProduct
    )
    .post(
        '/searchProducts',
        protect,
        authorize(
            process.env.REQUESTER,
            process.env.SUPPORT,
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getSearchProducts
    )
    .post(
        '/getSearchInwardProducts',
        protect,
        authorize(
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getSearchInwardProducts
    )
    .post(
        '/getSearchOpexProducts',
        protect,
        authorize(
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getSearchOpexProducts
    )
    .post(
        '/getSearchCapexProducts',
        protect,
        authorize(
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getSearchCapexProducts
    )
    .post(
        '/getAllProducts',
        protect,
        authorize(
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getAllProducts
    )
    .post(
        '/getALLProductGroup',
        protect,
        authorize(
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getALLProductGroup
    )
    .post(
        '/getALLProductALTCode',
        protect,
        authorize(
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getALLProductALTCode
    )
    .post(
        '/trackAsset',
        product_valid.trackValid(),
        protect,
        authorize(
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        trackAsset
    )
    .post(
        '/trackAssetExport',
        protect,
        authorize(
            process.env.IT,
            process.env.ADMIN,
            process.env.IT_SYSTEM_ADMIN,
            process.env.ADMIN_SYSTEM_ADMIN,
            process.env.SYSTEM_ADMIN
        ),
        getTrackAssetExport
    );

module.exports = router;